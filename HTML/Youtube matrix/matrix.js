const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");

let cw = window.innerWidth;
let ch = window.innerHeight;


canvas.width = cw;
canvas.height = ch;


window.addEventListener('resize', function(event) {
    cw = window.innerWidth;
    ch = window.innerHeight;
    canvas.width = cw
    canvas.height = ch;
    maxColumns = cw / fontSize;
    console.log(cw, ch)
}, true);

let charArr = [
    "一", "人", "七", "八", "九", "十", "入", "二", "三", "上", 
    "下", "大", "女", "万", "土", "山", "千", "川", "子", "小", 
    "口", "手", "五", "日", "六", "分", "中", "円", "月", "午", 
    "今", "木", "父", "火", "天", "友", "水", "少", "左", "四", 
    "出", "外", "北", "本", "母", "半", "右", "白", "生", "古", 
    "目", "立", "百", "気", "行", "毎", "名", "休", "年", "西", 
    "先", "安", "会", "多", "耳", "見", "何", "男", "来", "車", 
    "花", "言", "社", "足", "長", "学", "東", "金", "国", "雨", 
    "空", "店", "食", "後", "南", "前", "時", "校", "高", "書", 
    "魚", "週", "間", "飲", "道", "買", "電", "話", "新", "語", 
    "聞", "読", "駅", "力", "工", "夕", "牛", "犬", "元", "止", 
    "心", "切", "不", "文", "方", "引", "区", "太", "以", "去", 
    "兄", "広", "仕", "写", "主", "正", "世", "台", "代", "田", 
    "冬", "用", "市", "民", "考", "死", "字", "自", "色", "早", 
    "地", "同", "肉", "有", "回", "光", "好", "合", "池", "医", 
    "究", "近", "作", "私", "住", "図", "赤", "走", "体", "別", 
    "町", "弟", "売", "声", "村", "低", "英", "画", "京", "姉", 
    "使", "始", "事", "者", "青", "知", "注", "服", "物", "歩", 
    "妹", "味", "明", "夜", "所", "門", "林", "映", "屋", "音", 
    "海", "界", "急", "計", "研", "建", "思", "持", "室", "秋", 
    "重", "春", "送", "待", "茶", "昼", "度", "発", "品", "風", 
    "洋", "県", "首", "乗", "洗", "便", "院", "員", "夏", "家", 
    "帰", "起", "紙", "借", "真", "通", "特", "病", "勉", "旅", 
    "料", "弱", "悪", "強", "教", "黒", "習", "終", "族", "鳥", 
    "転", "動", "堂", "問", "野", "理", "菜", "産", "進", "都", 
    "運", "開", "集", "場", "貸", "朝", "着", "答", "飯", "寒", 
    "軽", "暑", "森", "短", "意", "楽", "漢", "業", "試", "暗", 
    "遠", "働", "歌", "銀", "説", "質", "館", "親", "頭", "薬", 
    "験", "題", "曜", "顔", "干", "丸", "久", "才", "亡", "王", 
    "化", "欠", "戸", "支", "内", "反", "比", "夫", "仏", "片", 
    "毛", "予", "公", "打", "圧", "永", "央", "加", "可", "刊", 
    "求", "旧", "玉", "号", "札", "冊", "皿", "史", "示", "失", 
    "収", "処", "申", "石", "他", "庁", "犯", "皮", "必", "氷", 
    "付", "布", "平", "辺", "包", "末", "未", "由", "幼", "礼", 
    "令", "司", "衣", "印", "因", "羽", "宇", "灰", "各", "危", 
    "机", "共", "曲", "血", "件", "交", "向", "再", "在", "糸", 
    "寺", "次", "式", "守", "州", "成", "全", "争", "存", "宅", 
    "団", "竹", "虫", "仲", "兆", "伝", "当", "灯", "任", "米", 
    "両", "列", "老", "仮", "囲", "延", "貝", "改", "快", "角", 
    "完", "希", "技", "吸", "局", "均", "君", "形", "芸", "決", 
    "谷", "告", "困", "材", "位", "児", "似", "初", "助", "状", 
    "身", "臣", "折", "束", "対", "努", "投", "麦", "坂", "判", 
    "否", "兵", "返", "防", "忘", "役", "余", "乱", "卵", "利", 
    "良", "労", "冷", "応", "志", "条", "批", "育", "泳", "易", 
    "果", "河", "官", "巻", "岩", "岸", "季", "泣", "居", "協", 
    "供", "苦", "具", "券", "固", "呼", "幸", "効", "刻", "妻", 
    "刷", "参", "委", "枝", "治", "実", "若", "取", "受", "周", 
    "述", "招", "承", "性", "制", "昔", "卒", "担", "宙", "直", 
    "定", "底", "的", "毒", "届", "乳", "念", "波", "拝", "板", 
    "版", "非", "表", "府", "武", "並", "放", "法", "宝", "枚"
]

let maxCharCount = 300;
let fallingCharArr = [];
let fontSize = 16;
let maxColumns = cw / fontSize;


let frames = 0;

class FallingChar {
  constructor(x, y) {
    this.x = x;
    this.y = y;
  }

  draw(ctx) {
    this.value =
      charArr[Math.floor(Math.random() * (charArr.length - 1))].toUpperCase();
    this.speed = (Math.random() * fontSize * 3) / 4 + (fontSize * 3) / 4;

    ctx.fillStyle = "rgba(0,255,0, 1)";
    ctx.font = fontSize + "px sans-serif";
    ctx.fillText(this.value, this.x, this.y);
    this.y += this.speed;

    if (this.y > ch) {
      this.y = (Math.random() * ch) / 2 - 50;
      this.x = Math.floor(Math.random() * maxColumns) * fontSize;
      this.speed = (-Math.random() * fontSize * 3) / 4 + (fontSize * 3) / 4;
    }
  }
}

let update = () => {
  if (fallingCharArr.length < maxCharCount) {
    let fallingChar = new FallingChar(
      Math.floor(Math.random() * maxColumns) * fontSize,
      (Math.random() * ch) / 2 - 50
    );
    fallingCharArr.push(fallingChar);
  }
  ctx.fillStyle = "rgba(0,0,0,0.05)";
  ctx.fillRect(0, 0, cw, ch);
  for (let i = 0; i < fallingCharArr.length && frames % 2 == 0; i++) {
    fallingCharArr[i].draw(ctx);
  }

  requestAnimationFrame(update);
  frames++;
};

update();